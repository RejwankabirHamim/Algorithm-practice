//https://lightoj.com/problem/krypton-number-system
#include<bits/stdc++.h>
using namespace std;
#define int  long long
#define ff first
#define ss second
#define pb push_back
const int mod =   4294967296;
struct Mat {
  int n, m;
  vector<vector<int>> a;
  Mat() { }
  Mat(int _n, int _m) {n = _n; m = _m; a.assign(n, vector<int>(m, 0)); }
  Mat(vector< vector<int> > v) { n = v.size(); m = n ? v[0].size() : 0; a = v; }
  inline void make_unit() {
    assert(n == m);
    for (int i = 0; i < n; i++)  {
      for (int j = 0; j < n; j++) a[i][j] = i == j;
    }
  }
  inline Mat operator + (const Mat &b) {
    assert(n == b.n && m == b.m);
    Mat ans = Mat(n, m);
    for(int i = 0; i < n; i++) {
      for(int j = 0; j < m; j++) {
        ans.a[i][j] = (a[i][j] + b.a[i][j]) % mod;
      }
    }
    return ans;
  }
  inline Mat operator - (const Mat &b) {
    assert(n == b.n && m == b.m);
    Mat ans = Mat(n, m);
    for(int i = 0; i < n; i++) {
      for(int j = 0; j < m; j++) {
        ans.a[i][j] = (a[i][j] - b.a[i][j] + mod) % mod;
      }
    }
    return ans;
  }
  inline Mat operator * (const Mat &b) {
    assert(m == b.n);
    Mat ans = Mat(n, b.m);
    for(int i = 0; i < n; i++) {
      for(int j = 0; j < b.m; j++) {
        for(int k = 0; k < m; k++) {
          ans.a[i][j] = (ans.a[i][j] + 1LL * a[i][k] * b.a[k][j] ) % mod;
        }
      }
    }
    return ans;
  }
  inline Mat pow(long long k) {
    assert(n == m);
    if(k==0)
    {
        Mat ans(n, n);
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(i==j)ans.a[i][j]=1;
                else ans.a[i][j]=0;
            }
        }
    }
    Mat ans(n, n), t = a; ans.make_unit();
    while (k) {
      if (k & 1) ans = ans * t;
      t = t * t;
      k >>= 1;
    }
    return ans;
  }
  inline Mat& operator += (const Mat& b) { return *this = (*this) + b; }
  inline Mat& operator -= (const Mat& b) { return *this = (*this) - b; }
  inline Mat& operator *= (const Mat& b) { return *this = (*this) * b; }
  inline bool operator == (const Mat& b) { return a == b.a; }
  inline bool operator != (const Mat& b) { return a != b.a; }
};
main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  int i,j;
  int tc,cs;
  Mat pre[6][30];
  vector<pair<int,int>>v[6];
  for(i=1;i<=5;i++)
  {
      for(j=0;j<=i;j++)
      {
          int mx=max(j,i-j);
          mx*=mx;
          for(int k=1;k<=mx;k++)v[i].pb({k,j});
      }
      int sz=v[i].size();
      Mat tmp(sz,sz);
      for(int j=0;j<sz;j++)
      {
          for(int k=0;k<sz;k++)
          {
              tmp.a[j][k]=0;
          }
      }
      for(int j=0;j<sz;j++)
      {
          if(v[i][j].ff!=1)
          {
              tmp.a[j][j-1]=1;
              continue;
          }
          for(int k=0;k<sz;k++)
          {
              int x=abs(v[i][j].ss-v[i][k].ss);
              x*=x;
              if(x==0)continue;
              if(x==v[i][k].ff)tmp.a[j][k]=1;
          }
      }
      pre[i][0]=tmp;
      for(j=1;j<=29;j++)
      {
          pre[i][j]=pre[i][j-1]*pre[i][j-1];
      }
  }
  cin>>tc;
  for(cs=1;cs<=tc;cs++)
  {
      int n, m, k,x,y;
      int dp[26][6];
      cin >>k>> n ;
      for(i=0;i<26;i++)
        for(j=0;j<6;j++)dp[i][j]=0;
      for(j=1;j<k;j++)dp[0][j]=1;
      for(i=1;i<=25;i++)
      {
          for(j=0;j<k;j++)
          {
              for(int l=0;l<k;l++)
              {
                  x=(l-j)*(l-j);
                  if(x>i||x==0)continue;
                  dp[i][j]=(dp[i][j]+dp[i-x][l])%mod;
              }
          }
      }
      if(n<=25)
      {
          int ans=0;
          for(i=0;i<k;i++)ans=(ans+dp[n][i])%mod;
          cout<<"Case "<<cs<<": "<<ans<<endl;
          continue;
      }
      int sz=v[k-1].size();
      k--;
      Mat nw(sz,1);
      for(i=0;i<sz;i++)
      {
          auto u=v[k][i];
          nw.a[i][0]=dp[26-u.ff][u.ss];
      }
      n-=25;
      for(i=0;i<=29;i++)
      {
          if(n&(1<<i))nw=pre[k][i]*nw;
      }
      int ans=0;
      for(i=0;i<sz;i++)
      {
          auto u=v[k][i];
          if(u.ff==1)
          {
              ans=(ans+nw.a[i][0])%mod;
          }
      }
      ans=(ans+mod)%mod;
      cout<<"Case "<<cs<<": "<<ans<<endl;

  }
  return 0;
}
